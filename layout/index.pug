extends widget/base

block append head
    link(rel='stylesheet', href= url_for("/style/widget-post-list.css"))

block content
    - var isIndex = true
    include widget/widget-post-list
        block sidebar
            div(class= `${page.current === 1 ? 'is-hidden-mobile-and-portrait' : ''}`)
                include widget/widget-search
                if theme.widgets.includes('profile')
                    include widget/widget-profile
            if theme.links && theme.links.length > 0
                include widget/widget-links
            if theme.iframe
                iframe(src= theme.iframe style="width: 100%; height: 446px; box-shadow: 0 6px 30px -10px rgba(0, 0, 0, 0.1); margin-bottom: 9px;" loading="lazy")
            if theme.widget_filter
                include widget/widget-recent-content
            if theme.widgets.includes('category') && site.categories.length > 0
                include widget/widget-categories
            if theme.widgets.includes('archive')
                include widget/widget-archives
            if theme.widgets.includes('tag') && site.tags.length > 0
                include widget/widget-tag

block append script
    script.
        var searchDatabase = []

        function renderSearchResults(results, searchResultEl) {
            searchResultEl.innerHTML = null
            var fragment = document.createDocumentFragment()

            results.forEach(function (item) {
                var link = document.createElement('a')
                var title = document.createElement('h5')
                var content = document.createElement('p')

                title.className = 'mb-1'
                title.innerText = item.title
                content.innerHTML = item.content

                link.href = item.link
                link.appendChild(title)
                link.appendChild(content)
                link.className = 'p-4 is-block'

                fragment.appendChild(link)
            })

            searchResultEl.appendChild(fragment)
            searchResultEl.style.maxHeight = '550px'
        }

        function searching(inputText) {
            var inputTexts = inputText.split(' ')
            var searchResults = []
            inputTexts.forEach(function (searchKey) {
                var haveSearchValue = Boolean(searchKey.trim())
                if (!haveSearchValue) return

                var key = searchKey.toLowerCase()

                for (var entry of searchDatabase) {
                    var title = entry.getElementsByTagName('title')[0].textContent
                    var link = entry.getElementsByTagName('link')[0].getAttribute('href')
                    var contentWithTags = entry.getElementsByTagName('content')[0].textContent
                    var content = contentWithTags.trim().replace(/<[^>]+>/g, '')
                    var rawContent = content.toLowerCase()

                    var LENGTH = 80
                    var finalContent = ''
                    var contentLength = rawContent.length
                    var searchResultIdx = rawContent.indexOf(key)

                    var startIdx = searchResultIdx - 20,
                        endIdx = startIdx + LENGTH

                    if (startIdx < 0) {
                        startIdx = 0
                        endIdx = 100
                    }

                    endIdx > contentLength && (endIdx = contentLength)

                    finalContent = content.substring(startIdx, endIdx)

                    if (title.toLowerCase().indexOf(key) > -1) {
                        searchResults.unshift({
                            link: link,
                            title: title,
                            content: finalContent,
                        })
                    } else if (searchResultIdx > -1) {
                        searchResults.push({
                            link: link,
                            title: title,
                            content: finalContent,
                        })
                    }
                }
            })
            return searchResults
        }
